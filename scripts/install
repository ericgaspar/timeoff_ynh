#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Configuring firewall..." --weight=1

port=$(ynh_find_port --port=9001)	# Look for an available port
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL NODEJS
#=================================================

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================

#ynh_replace_string "__PATH__/" "${path_url%/}/" "../conf/nginx.conf"

ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# SPECIFIC SETUP
#=================================================
# HANDLE LOG FILES AND LOGROTATE
#=================================================

# Create log directory
mkdir -p /var/log/$app
touch /var/log/$app/installation.log
install_log=/var/log/$app/installation.log
touch $install_log
chown $app -R /var/log/$app

# Setup logrotate
ynh_use_logrotate

#=================================================
# INSTALL
#=================================================
ynh_script_progression --message="Building $app... (this will take some time and resources!)" --weight=30

pushd "$final_path" || ynh_die	
	ynh_use_nodejs
	#ynh_exec_as $app
	#$ynh_node_load_PATH 
	$ynh_npm install --unsafe-perm
popd || ynh_die

#=================================================
# CONFIGURE
#=================================================

cp ../conf/app.json "$final_path/config/app.json"
ynh_replace_string --match_string="__DOMAIN__" --replace_string="$domain" --target_file="$final_path/config/app.json"

cp ../conf/db.json "$final_path/config/db.json"

ynh_store_file_checksum "$final_path/config/app.json"
ynh_store_file_checksum "$final_path/config/db.json"

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Set files ownership to etherpad
chown -R $app: $final_path
chmod 600 "$final_path/config/db.json"	# Restrict access to db.json

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

#ynh_replace_string "__NODEJS__" "$nodejs_use_version" "../conf/systemd.service"
#ynh_replace_string "__NODE_DIR__" "$nodedir" "../conf/systemd.service"
ynh_replace_string "__PORT__" "$port" "../conf/systemd.service"
ynh_replace_string "__FINAL_PATH__" "$final_path" "../conf/systemd.service"

ynh_add_systemd_config

#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description "A short description of the app" --log "/var/log/$app/$app.log"

#=================================================
# SETUP FAIL2BAN
#=================================================

#ynh_add_fail2ban_config "/var/log/nginx/$domain-access.log" "<HOST> .* \"POST /mypads/api/auth/login HTTP/1.1\" 400" 5

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --weight=2

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
